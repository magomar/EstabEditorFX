//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.24 at 04:24:04 PM CEST 
//


package net.deludobellico.stabeditor.data.jaxb;

import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Icon complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="Icon">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="background-color" type="{}RGBColor"/>
 *         &lt;element name="background-dark-color" type="{}RGBColor"/>
 *         &lt;element name="background-light-color" type="{}RGBColor"/>
 *         &lt;element name="designation-color" type="{}RGBColor"/>
 *         &lt;element name="symbol-color" type="{}SymbolColor"/>
 *         &lt;element name="military-symbol" type="{http://www.w3.org/2001/XMLSchema}byte"/>
 *         &lt;element name="picture-symbol" type="{}PictureSymbol"/>
 *         &lt;element name="force-size-icon" type="{}ForceSize"/>
 *         &lt;element name="is-hq" type="{}YesNo"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Icon", propOrder = {
        "backgroundColor",
        "backgroundDarkColor",
        "backgroundLightColor",
        "designationColor",
        "symbolColor",
        "militarySymbol",
        "pictureSymbol",
        "forceSizeIcon",
        "isHq"
})
public class Icon {

    private final transient ObjectProperty<RGBColor> backgroundColorProxy = new SimpleObjectProperty<RGBColor>();
    private final transient ObjectProperty<RGBColor> backgroundDarkColorProxy = new SimpleObjectProperty<RGBColor>();
    private final transient ObjectProperty<RGBColor> backgroundLightColorProxy = new SimpleObjectProperty<RGBColor>();
    private final transient ObjectProperty<RGBColor> designationColorProxy = new SimpleObjectProperty<RGBColor>();
    private final transient ObjectProperty<SymbolColor> symbolColorProxy = new SimpleObjectProperty<SymbolColor>();
    private final transient ObjectProperty<Byte> militarySymbolProxy = new SimpleObjectProperty<Byte>();
    private final transient ObjectProperty<PictureSymbol> pictureSymbolProxy = new SimpleObjectProperty<PictureSymbol>();
    private final transient ObjectProperty<ForceSize> forceSizeIconProxy = new SimpleObjectProperty<ForceSize>();
    private final transient ObjectProperty<YesNo> isHqProxy = new SimpleObjectProperty<YesNo>();
    @XmlElement(name = "background-color", required = true)
    protected RGBColor backgroundColor;
    @XmlElement(name = "background-dark-color", required = true)
    protected RGBColor backgroundDarkColor;
    @XmlElement(name = "background-light-color", required = true)
    protected RGBColor backgroundLightColor;
    @XmlElement(name = "designation-color", required = true)
    protected RGBColor designationColor;
    @XmlElement(name = "symbol-color", required = true)
    protected SymbolColor symbolColor;
    @XmlElement(name = "military-symbol")
    protected byte militarySymbol;
    @XmlElement(name = "picture-symbol", required = true)
    protected PictureSymbol pictureSymbol;
    @XmlElement(name = "force-size-icon", required = true)
    protected ForceSize forceSizeIcon;
    @XmlElement(name = "is-hq", required = true)
    protected YesNo isHq;

    /**
     * Gets the value of the backgroundColor property.
     */
    public RGBColor getBackgroundColor() {
        if (this.backgroundColorProxy.get() == null) {
            this.backgroundColorProxy.set(backgroundColor);
        }
        return this.backgroundColorProxy.get();
    }

    /**
     * Sets the value of the backgroundColor property.
     *
     * @param value allowed object is
     *              {@link RGBColor }
     */
    public void setBackgroundColor(RGBColor value) {
        this.backgroundColor = value;
        this.backgroundColorProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<RGBColor> backgroundColorProperty() {
        return this.backgroundColorProxy;
    }

    /**
     * Gets the value of the backgroundDarkColor property.
     */
    public RGBColor getBackgroundDarkColor() {
        if (this.backgroundDarkColorProxy.get() == null) {
            this.backgroundDarkColorProxy.set(backgroundDarkColor);
        }
        return this.backgroundDarkColorProxy.get();
    }

    /**
     * Sets the value of the backgroundDarkColor property.
     *
     * @param value allowed object is
     *              {@link RGBColor }
     */
    public void setBackgroundDarkColor(RGBColor value) {
        this.backgroundDarkColor = value;
        this.backgroundDarkColorProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<RGBColor> backgroundDarkColorProperty() {
        return this.backgroundDarkColorProxy;
    }

    /**
     * Gets the value of the backgroundLightColor property.
     */
    public RGBColor getBackgroundLightColor() {
        if (this.backgroundLightColorProxy.get() == null) {
            this.backgroundLightColorProxy.set(backgroundLightColor);
        }
        return this.backgroundLightColorProxy.get();
    }

    /**
     * Sets the value of the backgroundLightColor property.
     *
     * @param value allowed object is
     *              {@link RGBColor }
     */
    public void setBackgroundLightColor(RGBColor value) {
        this.backgroundLightColor = value;
        this.backgroundLightColorProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<RGBColor> backgroundLightColorProperty() {
        return this.backgroundLightColorProxy;
    }

    /**
     * Gets the value of the designationColor property.
     */
    public RGBColor getDesignationColor() {
        if (this.designationColorProxy.get() == null) {
            this.designationColorProxy.set(designationColor);
        }
        return this.designationColorProxy.get();
    }

    /**
     * Sets the value of the designationColor property.
     *
     * @param value allowed object is
     *              {@link RGBColor }
     */
    public void setDesignationColor(RGBColor value) {
        this.designationColor = value;
        this.designationColorProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<RGBColor> designationColorProperty() {
        return this.designationColorProxy;
    }

    /**
     * Gets the value of the symbolColor property.
     */
    public SymbolColor getSymbolColor() {
        if (this.symbolColorProxy.get() == null) {
            this.symbolColorProxy.set(symbolColor);
        }
        return this.symbolColorProxy.get();
    }

    /**
     * Sets the value of the symbolColor property.
     *
     * @param value allowed object is
     *              {@link SymbolColor }
     */
    public void setSymbolColor(SymbolColor value) {
        this.symbolColor = value;
        this.symbolColorProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<SymbolColor> symbolColorProperty() {
        return this.symbolColorProxy;
    }

    /**
     * Gets the value of the militarySymbol property.
     */
    public byte getMilitarySymbol() {
        if (this.militarySymbolProxy.get() == null) {
            this.militarySymbolProxy.set(militarySymbol);
        }
        return this.militarySymbolProxy.get();
    }

    /**
     * Sets the value of the militarySymbol property.
     */
    public void setMilitarySymbol(byte value) {
        this.militarySymbol = value;
        this.militarySymbolProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<Byte> militarySymbolProperty() {
        return this.militarySymbolProxy;
    }

    /**
     * Gets the value of the pictureSymbol property.
     */
    public PictureSymbol getPictureSymbol() {
        if (this.pictureSymbolProxy.get() == null) {
            this.pictureSymbolProxy.set(pictureSymbol);
        }
        return this.pictureSymbolProxy.get();
    }

    /**
     * Sets the value of the pictureSymbol property.
     *
     * @param value allowed object is
     *              {@link PictureSymbol }
     */
    public void setPictureSymbol(PictureSymbol value) {
        this.pictureSymbol = value;
        this.pictureSymbolProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<PictureSymbol> pictureSymbolProperty() {
        return this.pictureSymbolProxy;
    }

    /**
     * Gets the value of the forceSizeIcon property.
     */
    public ForceSize getForceSizeIcon() {
        if (this.forceSizeIconProxy.get() == null) {
            this.forceSizeIconProxy.set(forceSizeIcon);
        }
        return this.forceSizeIconProxy.get();
    }

    /**
     * Sets the value of the forceSizeIcon property.
     *
     * @param value allowed object is
     *              {@link ForceSize }
     */
    public void setForceSizeIcon(ForceSize value) {
        this.forceSizeIcon = value;
        this.forceSizeIconProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<ForceSize> forceSizeIconProperty() {
        return this.forceSizeIconProxy;
    }

    /**
     * Gets the value of the isHq property.
     */
    public YesNo getIsHq() {
        if (this.isHqProxy.get() == null) {
            this.isHqProxy.set(isHq);
        }
        return this.isHqProxy.get();
    }

    /**
     * Sets the value of the isHq property.
     *
     * @param value allowed object is
     *              {@link YesNo }
     */
    public void setIsHq(YesNo value) {
        this.isHq = value;
        this.isHqProxy.set(value);
    }

    /**
     * Generated by FXBeanPropertyXJCPlugin.
     */
    public ObjectProperty<YesNo> isHqProperty() {
        return this.isHqProxy;
    }

}
